{
    "version": "https://jsonfeed.org/version/1",
    "title": "Konrad Rydzak personal website",
    "home_page_url": "https://konradrydzak.github.io/",
    "feed_url": "https://konradrydzak.github.io/feed.json",
    "description": "My personal website with blog posts, completed projects/courses/tutorials with comments, about me section, contact info and more.",
    "icon": "https://konradrydzak.github.io/apple-touch-icon.png",
    "favicon": "https://konradrydzak.github.io/favicon.ico",
    "expired": false,
    
    "author":  {
        "name": "konradrydzak",
        "url": "https://konradrydzak.github.io",
        "avatar": null
    },
    
    "items": [
        
            {
                "id": "https://konradrydzak.github.io/2024/03/14/switching-my-personal-website-theme-to-dark-mode",
                "title": "Switching my personal website theme to dark mode",
                "summary": null,
                "content_text": "Every now and then I take a quick look at my portfolio, resume, LinkedIn, GitHub, all my project websites to check if everything is up-to-date and working.Yesterday, while checking this page, I had a 💡 moment.  Or rather, my eyes hurt from seeing all the white brightness of the default Sidey jekyll theme.Join me on the dark side…I prefer to use dark mode whenever I can (sue me!), so I thought I’d try to switch to it for my website. I thought “how hard can it be? just a few css color properties to change/set and all will be well…”. Now I know how naive that was!But don’t get discouraged, it’s really not that hard (if you know what you’re doing 😉).And to help you out - see how the difference is like night and day (but reversed):Changing Cascade Style… Oh, no! Now everything is black or white - not inverted!What’s the easiest way to find out what colors a website uses? Of course, not reading the docs/_sass/_main.scss file first is the best way to start…But in all seriousness, simply going to the site and hitting ‘Inspect’ is quick, clever and easy. A few attempts of changing the hex or rgb values found, and we’re golden.  As a side note, I highly recommend not using pure black as a background - it’s just weird.What I’m using here is #121212 for example, just a little bit off black works wonders.Everything is fine and dandy, so where’s the catch?We’ve figured out what to change, experimented with some color values that look nice, gone back to the css file, formatted it, changed every color/background/CTRL+F: ‘#’ or ‘rgb(…)’. Now just commit all of it, push it to a “style-testing” branch, build, deploy and see it in all it’s glory!But wait a minute, Blog(s) are good, About me and Contact is fine, but what’s up with the Search bar being so bright all of a sudden?If you want, you can check the commit history to see how I blatantly pasted a fixed input style for the search bar into my website’s (mentioned everywhere) css file. Surprise, surprise - it didn’t work. Silly me spent half an hour finding out that the docs/_pages/search.md file had set input style inside!One line quick fix, and we’re merging to main.Victory! But what’s that? You don’t like it? Hmmm…Yes, I know: not everyone prefers the dark mode, and I understand that. I’m not forcing my opinion on you, or rather technically I am for the time being, but I promise: if there is a day when I will visit my website, find the energy, courage and a working monkey brain inside me to figure out how to add a toggle to switch between light mode and dark mode - I will do it for sure!  By the way: Happy Pi-Day! 🥳",
                "content_html": "<p>Every now and then I take a quick look at my portfolio, resume, LinkedIn, GitHub, all my project websites to check if everything is up-to-date and working.Yesterday, while checking this page, I had a 💡 moment.</p><blockquote>  <p>Or rather, my eyes hurt from seeing all the white brightness of the default <a href=\"https://github.com/ronv/sidey\">Sidey jekyll theme</a>.</p></blockquote><h3 id=\"join-me-on-the-dark-side\">Join me on the dark side…</h3><p>I prefer to use dark mode whenever I can (sue me!), so I thought I’d try to switch to it for my website. I thought “how hard can it be? just a few <em>css</em> color properties to change/set and all will be well…”. Now I know how naive that was!</p><p>But don’t get discouraged, it’s really not that hard (<strong><em>if you know what you’re doing</em></strong> 😉).</p><p>And to help you out - see how the difference is like night and day (but reversed):</p><p><img src=\"/assets/images/Sidey-jekyll-light-mode-theme.png\" alt=\"Sidey jekyll original light mode theme\" /><img src=\"/assets/images/Sidey-jekyll-dark-mode-theme.png\" alt=\"My custom Sidey jekyll dark mode theme\" /></p><h3 id=\"changing-cascade-style-oh-no-now-everything-is-black-or-white---not-inverted\">Changing Cascade Style… Oh, no! Now everything is black <em>or</em> white - not inverted!</h3><p>What’s the easiest way to find out what colors a website uses? Of course, <strong>not</strong> reading the <em>docs/_sass/_main.scss</em> file first is the best way to start…But in all seriousness, simply going to the site and hitting ‘Inspect’ is quick, clever and easy. A few attempts of changing the hex or rgb values found, and we’re golden.</p><blockquote>  <p>As a side note, I highly recommend not using pure black as a background - it’s just weird.What I’m using here is <em>#121212</em> for example, just a little bit off <strong>black</strong> works wonders.</p></blockquote><h3 id=\"everything-is-fine-and-dandy-so-wheres-the-catch\">Everything is fine and dandy, so where’s the catch?</h3><p>We’ve figured out what to change, experimented with some color values that look nice, gone back to the <em>css</em> file, formatted it, changed every color/background/CTRL+F: ‘#’ or ‘rgb(…)’. Now just commit all of it, push it to a “style-testing” branch, build, deploy and see it in all it’s glory!</p><p>But wait a minute, Blog(s) are good, About me and Contact is fine, but what’s up with the Search bar being so bright all of a sudden?</p><p>If you want, you can check the commit history to see how I blatantly pasted a fixed input style for the search bar into my website’s (mentioned everywhere) <em>css</em> file. Surprise, surprise - it didn’t work. Silly me spent half an hour finding out that the <em>docs/_pages/search.md</em> file had set input style inside!One line quick fix, and we’re merging to main.</p><h3 id=\"victory-but-whats-that-you-dont-like-it-hmmm\">Victory! But what’s that? You don’t like it? Hmmm…</h3><p>Yes, I know: not everyone prefers the dark mode, and I understand that. I’m not forcing my opinion on you, or rather <strong><em>technically</em></strong> I am for the time being, but I promise: if there is a day when I will visit my website, find the energy, courage and a working monkey brain inside me to figure out how to add a toggle to switch between light mode and dark mode - I will do it for sure!</p><p><br /></p><blockquote>  <p>By the way: Happy Pi-Day! 🥳</p></blockquote>",
                "url": "https://konradrydzak.github.io/2024/03/14/switching-my-personal-website-theme-to-dark-mode",
                
                
                
                
                
                "date_published": "2024-03-14T00:00:00+01:00",
                "date_modified": "2024-03-14T00:00:00+01:00",
                
                    "author":  {
                    "name": "konradrydzak",
                    "url": "https://konradrydzak.github.io",
                    "avatar": null
                    }
                    
                
            },
        
            {
                "id": "https://konradrydzak.github.io/2023/12/04/advent-od-code-festive-daily-coding-challenges",
                "title": "Advent of Code - festive daily coding challenges",
                "summary": null,
                "content_text": "Hey guys! 🚀 Guess what’s been keeping me busy coding lately (outside of work 😉)? A friend of mine suggested to me: Advent of Code 2023! If you haven’t heard of it, think of it as a programmer’s advent calendar, with daily coding challenges for all skill levels and languages.Discovering the Advent of Code magicI started with a slight delay on day 3 of the Advent of Code 2023, and I was immediately hooked (don’t worry, you can still do earlier days - and even go as far back as 2015!).The idea of daily coding challenges sounded like the perfect recipe for keeping my coding skills sharp, and maybe picking up some cool problem-solving tricks along the way. The best part? It’s designed for beginners and experienced developers alike.  If you’re curious, check out the About page on their website. It’s not just about coding; it’s about building a cool community, sharing knowledge, and having a blast coding together.Hanging out in the Advent of Code clubOne of the highlights of my Advent of Code journey has been the buzzing community over at Reddit. This subreddit is where the rest of the action is! It’s like a virtual water cooler where people chat about their solutions, share wisdom and, of course, ask for help when the going gets tough. It doesn’t matter if you’re a coding wizard or just starting out - everyone is welcome.  Quick tip: Dive into the Advent of Code Reddit community. You might pick up some cool tricks, get a bit of advice, or find a sample input that reveals the most common coding slip-ups.Coding Adventures and High-FivesAdvent of Code has been an absolute blast, pushing me to think outside the box and solve problems like a coding star. Each puzzle comes in two parts, building on this cool theme, and it’s not just about writing lines of code - it’s about exploring new problem-solving territories and taking your coding game to the next level.As we get ready for the festive season, I highly recommend jumping on the Advent of Code train. It’s not just about cracking puzzles, it’s about celebrating the sheer joy of coding and hanging out with a bunch of awesome people who love it too.Happy coding, and may your code be bug-free and your algorithms be slick! Good luck getting all 50 gold stars!",
                "content_html": "<p>Hey guys! 🚀 Guess what’s been keeping me busy coding lately (outside of work 😉)? A friend of mine suggested to me: <a href=\"https://adventofcode.com/2023\">Advent of Code 2023</a>! If you haven’t heard of it, think of it as a programmer’s advent calendar, with daily coding challenges for all skill levels and languages.</p><h3 id=\"discovering-the-advent-of-code-magic\">Discovering the Advent of Code magic</h3><p>I started with a slight delay on day 3 of the <a href=\"https://adventofcode.com/2023\">Advent of Code 2023</a>, and I was immediately hooked (don’t worry, you can still do earlier days - and even go as far back as 2015!).</p><p>The idea of daily coding challenges sounded like the perfect recipe for keeping my coding skills sharp, and maybe picking up some cool problem-solving tricks along the way. The best part? It’s designed for beginners and experienced developers alike.</p><blockquote>  <p>If you’re curious, check out the <a href=\"https://adventofcode.com/2023/about\">About</a> page on their website. It’s not just about coding; it’s about building a cool community, sharing knowledge, and having a blast coding together.</p></blockquote><h3 id=\"hanging-out-in-the-advent-of-code-club\">Hanging out in the Advent of Code club</h3><p>One of the highlights of my Advent of Code journey has been the buzzing community over at <a href=\"https://old.reddit.com/r/adventofcode/\">Reddit</a>. This subreddit is where the rest of the action is! It’s like a virtual water cooler where people chat about their solutions, share wisdom and, of course, ask for help when the going gets tough. It doesn’t matter if you’re a coding wizard or just starting out - everyone is welcome.</p><blockquote>  <p>Quick tip: Dive into the Advent of Code Reddit community. You might pick up some cool tricks, get a bit of advice, or find a sample input that reveals the most common coding slip-ups.</p></blockquote><h3 id=\"coding-adventures-and-high-fives\">Coding Adventures and High-Fives</h3><p>Advent of Code has been an absolute blast, pushing me to think outside the box and solve problems like a coding star. Each puzzle comes in two parts, building on this cool theme, and it’s not just about writing lines of code - it’s about exploring new problem-solving territories and taking your coding game to the next level.</p><p>As we get ready for the festive season, I highly recommend jumping on the Advent of Code train. It’s not just about cracking puzzles, it’s about celebrating the sheer joy of coding and hanging out with a bunch of awesome people who love it too.</p><p>Happy coding, and may your code be bug-free and your algorithms be slick! Good luck getting all 50 gold stars!</p>",
                "url": "https://konradrydzak.github.io/2023/12/04/advent-od-code-festive-daily-coding-challenges",
                
                
                
                
                
                "date_published": "2023-12-04T00:00:00+01:00",
                "date_modified": "2023-12-04T00:00:00+01:00",
                
                    "author":  {
                    "name": "konradrydzak",
                    "url": "https://konradrydzak.github.io",
                    "avatar": null
                    }
                    
                
            },
        
            {
                "id": "https://konradrydzak.github.io/2023/06/01/fun-games-for-learning-css",
                "title": "Fun games for learning CSS",
                "summary": null,
                "content_text": "For me CSS is hard. I know I need to learn more about HTML, CSS, Javascript to use them effectively combined, but for learning? They are definitely not equal for me:  Javascript? I get it, it’s just another scripting language.  HTML? Okay, I understand the syntax and I know the basics.  but CSS? Please no, that monstrosity is scary!What to do? What to do…As I’ve written before, the best learning comes from sources that are: easy to read and understand, are short/have small split sections and are interactive.But what if you reeeeeeealy don’t like learning that particular thing (CSS 👀)? Here comes procrastination! But we can use it, and bend it our way.I’m talking about playing games.  Yes, sometimes instead of cleaning the apartment all I can think about is that I’d love to play a video game right now. And in my opinion, the same mindset and strategy can be used to learn hard things.Here I’m going to list some fun games to help you learn CSS that you can play in your browser:CSS DinerA visually appealing way to learn the basics of CSS selectors. Works smoothly and beating each level feels great. It’s so clever what Luke Pacholski (GitHub) has done, and I think it’s a prime example of what can be done to make learning more fun.Now go and clear out some plates! 🍽️Flexbox DefenceA tower defense game with a twist: all towers must be positioned with CSS flexbox.Now that’s a proper game! Who doesn’t like to play a tower defense game? I’m trully amazed by the fact that you can teach CSS things like: justify-content, align-items, flex-direction, order and align-self in such a way.There is no stopping in learning CSS when you can stop the incoming enemies from getting past your defenses!Flexbox Froggy and Grid GardenCodepip has a few educational games up its sleeve. The two mentioned here are free to play: Flexbox Froggy is another game for learning CSS flexbox and Grid Garden teaches about watering crops CSS grid.Instructions are clear, gameplay is smooth and so is the learning process involved. I really enjoyed going through all the levels ofboth of these games.  Since today is Children’s Day in Poland, I hope you’ll have fun and feel like a kid (not by getting angry about having to learn, but) playing the games listed above. Happy coding! 🥳",
                "content_html": "<p>For me CSS <strong>is hard</strong>. I know I need to learn more about HTML, CSS, Javascript to use them effectively combined, but for learning? They are definitely not equal for me:</p><ul>  <li>Javascript? I get it, it’s just another scripting language.</li>  <li>HTML? Okay, I understand the syntax and I know the basics.</li>  <li>but CSS? Please no, that monstrosity is scary!</li></ul><h3 id=\"what-to-do-what-to-do\">What to do? What to do…</h3><p>As I’ve written before, the best learning comes from sources that are: easy to read and understand, are short/have small split sections and are interactive.</p><p>But what if you reeeeeeealy don’t like learning that particular thing (CSS 👀)? Here comes procrastination! But we can use it, and bend it our way.</p><p>I’m talking about playing games.</p><blockquote>  <p>Yes, sometimes instead of cleaning the apartment all I can think about is that I’d love to play a video game right now. And in my opinion, the same mindset and strategy can be used to learn hard things.</p></blockquote><p>Here I’m going to list some fun games to help you learn CSS that you can play in your browser:</p><h3 id=\"css-diner\"><a href=\"http://cssdiner.com\">CSS Diner</a></h3><p>A visually appealing way to learn the basics of CSS selectors. Works smoothly and beating each level feels great. It’s so clever what Luke Pacholski (<a href=\"https://github.com/flukeout/css-diner\">GitHub</a>) has done, and I think it’s a prime example of what can be done to make learning more fun.</p><p>Now go and clear out some plates! 🍽️</p><h3 id=\"flexbox-defence\"><a href=\"http://www.flexboxdefense.com/\">Flexbox Defence</a></h3><p>A tower defense game with a twist: all towers must be positioned with CSS flexbox.</p><p>Now that’s a proper game! Who doesn’t like to play a tower defense game? I’m trully amazed by the fact that you can teach CSS things like: <em>justify-content</em>, <em>align-items</em>, <em>flex-direction</em>, <em>order</em> and <em>align-self</em> in such a way.</p><p>There is no stopping in learning CSS when you can stop the incoming enemies from getting past your defenses!</p><h3 id=\"flexbox-froggy-and-grid-garden\"><a href=\"https://flexboxfroggy.com/\">Flexbox Froggy</a> and <a href=\"https://cssgridgarden.com/\">Grid Garden</a></h3><p><a href=\"https://codepip.com/about/\">Codepip</a> has a few educational games up its sleeve. The two mentioned here are free to play: Flexbox Froggy is another game for learning CSS flexbox and Grid Garden teaches about <del>watering crops</del> CSS grid.</p><p>Instructions are clear, gameplay is smooth and so is the learning process involved. I really enjoyed going through all the levels ofboth of these games.</p><p><br /></p><blockquote>  <p>Since today is <a href=\"https://en.wikipedia.org/wiki/Children%27s_Day\">Children’s Day in Poland</a>, I hope you’ll have fun and feel like a kid (not by getting angry about having to learn, but) playing the games listed above. Happy coding! 🥳</p></blockquote>",
                "url": "https://konradrydzak.github.io/2023/06/01/fun-games-for-learning-css",
                
                
                
                
                
                "date_published": "2023-06-01T00:00:00+02:00",
                "date_modified": "2023-06-01T00:00:00+02:00",
                
                    "author":  {
                    "name": "konradrydzak",
                    "url": "https://konradrydzak.github.io",
                    "avatar": null
                    }
                    
                
            },
        
            {
                "id": "https://konradrydzak.github.io/2023/05/14/working-with-and-practicing-regex",
                "title": "Working with and practicing regex",
                "summary": null,
                "content_text": "Whether you want to learn about regex, are already using it, or are trying to master this ancient magic of pattern matching (for… reasons)I’ll guide you through some tools for learning, testing, and practicing while having fun!For beginners and to refresh the materialThe best learning sites in my opinion, always have a few things in common:  are easy to read and understand,  have short chapters, paragraphs or sections to learn,  are interactive in some way.With that in mind, I can show you a great example of exactly that: RegexOne.com.  And it’s sister: SQLBolt.com for learning… SQL.It covers a wide variety of topics, starting small and going all the way to advanced features.Seriously, give it a try, I can guarantee you won’t realize how fast time has flown by the time you finish the last lesson.Try it out for yourselfOnce you’ve mastered the basics, the best way to get started is to actually use the new tools for whatever you may need. Fill in the blanks every time you are struggling with a new problem while you are heavily testing your ideas with an easy to use online tool:regex101.com.I use it with Python selected, text to be parsed inserted as a test string (sometimes with additional flags set: e.g.: dot as newline) and my initial idea for regex placed. The results are live and easy to check, and a quick reference guide will help you every step of the way if you need any tips. There you can also see if you find anything new and useful (for example, check out positive/negative lookahead/lookbehind, it’s really useful in some cases).Homework, but funLast but not least, if you feel the need to challenge yourself and actually measure your knowledge, I can point you to:Regex Crossword. As the name says: it’s just a crossword with regex, simple but great!You’ll get the hang of it if you start with the tutorial and then work your way through the levels. I recommend logging in to save your progress, and checking the settings for any improvements to your experience.  I’m just sad that the creators decided to go with a new mobile look, instead of the old traditional website (you can search online to see what that looked like if you’re curious).I’ll leave you to it now with an inspiring quote from Master Yoda: “Do or do not, there is no try.”.\\b(r\\D{2}\\S{2})\\W( ).*?([^dy\\ ]{6}).*?(\\,)\\ .*?(.{3})\\Sself\\n.*?([ ]).*?(\\w+)(?= [olive]{4}).*?g[ear]{3}t(.)",
                "content_html": "<p>Whether you want to learn about <a href=\"https://en.wikipedia.org/wiki/Regular_expression\">regex</a>, are already using it, or are trying to master this ancient magic of pattern matching (for… reasons)<br /><img src=\"https://imgs.xkcd.com/comics/regular_expressions.png\" alt=\"regex superhero\" /><br />I’ll guide you through some tools for learning, testing, and practicing while having fun!</p><h3 id=\"for-beginners-and-to-refresh-the-material\">For beginners and to refresh the material</h3><p>The best learning sites in my opinion, always have a few things in common:</p><ul>  <li>are easy to read and understand,</li>  <li>have short chapters, paragraphs or sections to learn,</li>  <li>are interactive in some way.</li></ul><p>With that in mind, I can show you a great example of exactly that: <a href=\"https://regexone.com/\">RegexOne.com</a>.</p><blockquote>  <p>And it’s sister: <a href=\"https://sqlbolt.com/\">SQLBolt.com</a> for learning… SQL.</p></blockquote><p>It covers a wide variety of topics, starting small and going all the way to advanced features.<br />Seriously, give it a try, I can guarantee you won’t realize how fast time has flown by the time you finish the last lesson.</p><h3 id=\"try-it-out-for-yourself\">Try it out for yourself</h3><p>Once you’ve mastered the basics, the best way to get started is to actually use the new tools for whatever you may need. Fill in the blanks every time you are struggling with a new problem while you are heavily testing your ideas with an easy to use online tool:<a href=\"https://regex101.com/\">regex101.com</a>.<br />I use it with Python selected, text to be parsed inserted as a test string (sometimes with additional flags set: e.g.: dot as newline) and my initial idea for regex placed. The results are live and easy to check, and a quick reference guide will help you every step of the way if you need any tips. There you can also see if you find anything new and useful (for example, check out positive/negative lookahead/lookbehind, it’s really useful in some cases).</p><h3 id=\"homework-but-fun\">Homework, but fun</h3><p>Last but not least, if you feel the need to challenge yourself and actually measure your knowledge, I can point you to:<a href=\"https://regexcrossword.com/\">Regex Crossword</a>. As the name says: it’s just a crossword with regex, simple but great!You’ll get the hang of it if you start with the tutorial and then work your way through the levels. I recommend logging in to save your progress, and checking the settings for any improvements to your experience.</p><blockquote>  <p>I’m just sad that the creators decided to go with a new mobile look, instead of the old traditional website (you can search online to see what that looked like if you’re curious).</p></blockquote><p><br /></p><p>I’ll leave you to it now with an inspiring quote from Master Yoda: <strong><em>“Do or do not, there is no try.”</em></strong>.</p><pre><code class=\"language-pythonregexp\">\\b(r\\D{2}\\S{2})\\W( ).*?([^dy\\ ]{6}).*?(\\,)\\ .*?(.{3})\\Sself\\n.*?([ ]).*?(\\w+)(?= [olive]{4}).*?g[ear]{3}t(.)</code></pre>",
                "url": "https://konradrydzak.github.io/2023/05/14/working-with-and-practicing-regex",
                
                
                
                
                
                "date_published": "2023-05-14T00:00:00+02:00",
                "date_modified": "2023-05-14T00:00:00+02:00",
                
                    "author":  {
                    "name": "konradrydzak",
                    "url": "https://konradrydzak.github.io",
                    "avatar": null
                    }
                    
                
            },
        
            {
                "id": "https://konradrydzak.github.io/2023/05/11/typing-posts-with-markdown-syntax",
                "title": "Typing posts with Markdown syntax",
                "summary": null,
                "content_text": "If you’ve ever written README file for GitHub, you probably know what this is about.But still for everyone, let me summarize all the relevant sources and syntax tips for writing posts just like on this blog site!  Actually, if you want to write it exactly the same way, you can just look up the raw .md files in my site repo.Starting from the bottomIf you want to get started with Writing on GitHub, you probably should just Start writing on GitHub… No kidding, everything from the Basic writing and formatting syntaxup to advanced formatting is here, concise and easy to follow. I recommend reading through it all, even if you don’t need everything right away. It’s great to know in the back of your head what you can do with Markdown magic!If we want to be precise, it’s important to mention, that GitHub uses a special Flavored Markdown.  Side notes:          GitHub Flavored Markdown specification is actually based on CommonMark Spec.      Markdown was originally developed by John Gruber and published in 2004 in the form of a syntax description.      Tips and tricksFor a quick lookup on anything you commonly might need, I recommend using any Markdown Cheatsheetthat you might find useful for yourself. After knowing what is what from the GitHub docs, a cheatsheet is all you need todouble-check your syntax, or to look up any missing pieces you may have forgotten.And I probably don’t need to tell you that many integrated development environments (IDEs) have a preview option for Markdown files. This allows you to see a live preview of your content while writing, which can be helpful in ensuring that your formatting looks right. Here’s an example from PyCharm:Practicing typing… just typingLast but not least, typing posts with Markdown syntax comes down to… well just typing. And I cannot recommend enough this new site I recently discovered called keybr.com. It’s a fantastic resource for practicing typing correctly, increasing your typing speed, and of course typing without looking at the keyboard. The teaching method employed by Keybr is refreshing, offering generated lessons that match your skill level instead of repetitive exercises.Okay, I won’t spoil too much here, just go and spend 5 minutes on the site, even to just test your typing speed, accuracy and score on the site. Good luck and have fun practicing typing, and typing in Markdown!",
                "content_html": "<p>If you’ve ever written README file for GitHub, you probably know what this is about.<br />But still for everyone, let me summarize all the relevant sources and syntax tips for writing posts just like on this blog site!</p><blockquote>  <p>Actually, if you want to write it <em>exactly the same way</em>, you can just look up the raw <code>.md</code> files in my site repo.</p></blockquote><h3 id=\"starting-from-the-bottom\">Starting from the bottom</h3><p>If you want to get started with <a href=\"https://docs.github.com/en/get-started/writing-on-github\">Writing on GitHub</a>, you probably should just <a href=\"https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github\">Start writing on GitHub</a>… No kidding, everything from the <a href=\"https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax\">Basic writing and formatting syntax</a>up to advanced formatting is here, concise and easy to follow. I recommend reading through it all, even if you don’t need everything right away. It’s great to know in the back of your head what you can do with Markdown magic!</p><p>If we want to be precise, it’s important to mention, that GitHub uses a special <a href=\"https://github.github.com/gfm/#what-is-github-flavored-markdown-\">Flavored Markdown</a>.</p><ul>  <li>Side notes:    <ul>      <li>GitHub Flavored Markdown specification is actually based on <a href=\"https://spec.commonmark.org/\">CommonMark Spec</a>.</li>      <li>Markdown was originally developed by John Gruber and published in 2004 in the form of a <a href=\"https://daringfireball.net/projects/markdown/syntax\">syntax description</a>.</li>    </ul>  </li></ul><h3 id=\"tips-and-tricks\">Tips and tricks</h3><p>For a quick lookup on anything you commonly might need, I recommend using any <a href=\"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\">Markdown Cheatsheet</a>that you might find useful for yourself. After knowing what is what from the GitHub docs, a cheatsheet is all you need todouble-check your syntax, or to look up any missing pieces you may have forgotten.<br />And I probably don’t need to tell you that many integrated development environments (IDEs) have a preview option for Markdown files. This allows you to see a live preview of your content while writing, which can be helpful in ensuring that your formatting looks right. Here’s an example from PyCharm:</p><p><img src=\"/assets/images/Pycharm-preview-option.png\" alt=\"Pycharm Markdown preview option\" /></p><h3 id=\"practicing-typing-just-typing\">Practicing typing… just typing</h3><p>Last but not least, typing posts with Markdown syntax comes down to… well just typing. And I cannot recommend enough this new site I recently discovered called <a href=\"https://www.keybr.com/\">keybr.com</a>. It’s a fantastic resource for practicing typing correctly, increasing your typing speed, and of course typing without looking at the keyboard. The teaching method employed by Keybr is refreshing, offering generated lessons that match your skill level instead of repetitive exercises.<br />Okay, I won’t spoil too much here, just go and spend 5 minutes on the site, even to just test your typing speed, accuracy and score on the site. Good luck and have fun practicing typing, and typing in Markdown!</p>",
                "url": "https://konradrydzak.github.io/2023/05/11/typing-posts-with-markdown-syntax",
                
                
                
                
                
                "date_published": "2023-05-11T00:00:00+02:00",
                "date_modified": "2023-05-11T00:00:00+02:00",
                
                    "author":  {
                    "name": "konradrydzak",
                    "url": "https://konradrydzak.github.io",
                    "avatar": null
                    }
                    
                
            },
        
            {
                "id": "https://konradrydzak.github.io/2023/05/09/getting-started-with-github-pages",
                "title": "Getting started with GitHub Pages",
                "summary": null,
                "content_text": "Welcome to my personal website! I’m excited to start using this GitHub Page for blogging but first things first, let me tell you about the process I went through to get this site up and running.Following the GitHub Pages DocumentationTo begin my journey, I turned to the official GitHub Pages documentation. The GitHub Pages Quickstart tutorial provided a solid foundation and step-by-step instructions for getting started. The documentation covers everything from creating a repository to configuring settings and deploying your site. If you’re new to GitHub Pages, I highly recommend checking out this extensive guide.  If you need a more “by the hand” tutorial, here is a great introduction to building a site with GitHub Pages from the GitHub Skills.Using the Sidey Jekyll Blog ThemeFor the design of my personal website, I decided to use the Sidey Jekyll blog theme. Created by Ronv, Sidey offers an elegant and minimalist design that perfectly suits my vision. The theme has a simple, clean design and focuses on presenting material in a user-friendly way.Setup is not that intuitive, in fact copying/forking everything from Sidey GitHub repository is probably the easiest way. While some customization may require a deeper understanding, you can experiment and modify the theme to your liking through trial and error. For example, I’ve removed tags for blog posts and temporarily disabled certain feeds such as JSON, XML, and RSS.Overall, using Sidey allows me to focus on writing and sharing my thoughts, while the theme takes care of the overall presentation and layout of my blog posts. It’s a great way to present my content in a professional and aesthetically pleasing way.Additionally, this website serves as a place for my additional thoughts and comments on my portfolio, making it a valuable addition to my resume. 📋",
                "content_html": "<p>Welcome to my personal website! I’m excited to start using this GitHub Page for blogging but first things first, let me tell you about the process I went through to get this site up and running.</p><h3 id=\"following-the-github-pages-documentation\">Following the GitHub Pages Documentation</h3><p>To begin my journey, I turned to the <a href=\"https://docs.github.com/en/pages/quickstart\">official GitHub Pages documentation</a>. The GitHub Pages Quickstart tutorial provided a solid foundation and step-by-step instructions for getting started. The documentation covers everything from creating a repository to configuring settings and deploying your site. If you’re new to GitHub Pages, I highly recommend checking out this extensive guide.</p><blockquote>  <p>If you need a more “by the hand” tutorial, <a href=\"https://github.com/skills/github-pages\">here</a> is a great introduction to building a site with GitHub Pages from the <code>GitHub Skills</code>.</p></blockquote><h3 id=\"using-the-sidey-jekyll-blog-theme\">Using the Sidey Jekyll Blog Theme</h3><p>For the design of my personal website, I decided to use the Sidey Jekyll blog theme. Created by <a href=\"https://github.com/ronv\">Ronv</a>, Sidey offers an elegant and minimalist design that perfectly suits my vision. The theme has a simple, clean design and focuses on presenting material in a user-friendly way.<br />Setup is not that intuitive, in fact copying/forking everything from <a href=\"https://github.com/ronv/sidey/tree/master\">Sidey GitHub repository</a> is probably the easiest way. While some customization may require a deeper understanding, you can experiment and modify the theme to your liking through trial and error. For example, I’ve removed tags for blog posts and temporarily disabled certain feeds such as JSON, XML, and RSS.<br />Overall, using Sidey allows me to focus on writing and sharing my thoughts, while the theme takes care of the overall presentation and layout of my blog posts. It’s a great way to present my content in a professional and aesthetically pleasing way.<br />Additionally, this website serves as a place for my additional thoughts and comments on my portfolio, making it a valuable addition to my resume. 📋</p>",
                "url": "https://konradrydzak.github.io/2023/05/09/getting-started-with-github-pages",
                
                
                
                
                
                "date_published": "2023-05-09T00:00:00+02:00",
                "date_modified": "2023-05-09T00:00:00+02:00",
                
                    "author":  {
                    "name": "konradrydzak",
                    "url": "https://konradrydzak.github.io",
                    "avatar": null
                    }
                    
                
            }
        
    ]
}